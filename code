# All required libraries are imported here for you.
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.metrics import f1_score
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
crops = pd.read_csv("soil_measures.csv")

# Write your code here
crops.head()
crops.info()
crops.describe()

crops.isna().sum()
crops["crop"].value_counts()

y = crops["crop"]
X = crops[["N", "P", "K", "ph"]]
X_train, X_test, y_train, y_test = train_test_split(
    X,
    y,
    test_size=0.2,
    random_state=42
)

for f in ["N", "P", "K", "ph"]:
    model = LogisticRegression(max_iter=2000, multi_class='multinomial')
    model.fit(X_train[[f]], y_train)
    y_pred = model.predict(X_test[[f]])
    f_error = f1_score(y_test, y_pred, average='weighted')
    print(f"F1-score for {f}: {f_error}")

sns.heatmap(crops.corr(), annot=True)
plt.show()

crops_dummy = pd.get_dummies(crops['crop'], drop_first=True)
crops_dummy.info()

crops_dummy = pd.concat([crops, crops_dummy], axis=1)
crops_dummy = crops_dummy.drop("crop", axis=1)
crops_dummy

final_features = ['N', 'K', 'ph']
X_train, X_test, y_train, y_test = train_test_split(
    crops[final_features],
    crops["crop"],
    test_size=0.2,
    random_state=42
)
log_reg = LogisticRegression(max_iter=2000, multi_class='multinomial')
log_reg.fit(X_train, y_train)
y_pred = log_reg.predict(X_test)
f_error = f1_score(y_test, y_pred, average='weighted')
model_performance = f1_score(y_test, y_pred, average="weighted")
print(model_performance)
